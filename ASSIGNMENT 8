 ASSIGNMENT-8
1.In an organization they decide to give bonus to all the employees on New Year. A 5% bonus on
salary is given to the grade A workers and 10% bonus on salary to the grade B workers. Write a
program to enter the salary and grade of the employee. If the salary of the employee is less than
$10,000 then the employee gets an extra 2% bonus on salary Calculate the bonus that has to be
given to the employee and print the salary that the employee will get.
Sample Input & Output:
Enter the grade of the employee: B
Enter the employee salary: 50000
Salary=50000
Bonus=5000.0
Total to be paid:55000.0
Test cases:
1. Enter the grade of the employee: A
Enter the employee salary: 8000
2. Enter the grade of the employee: C
Enter the employee salary: 60000
3. Enter the grade of the employee: B
Enter the employee salary: 0
4. Enter the grade of the employee: 38000
Enter the employee salary: A
5. Enter the grade of the employee: B
Enter the employee salary: -8000
import java.util.Scanner;
public class BonusCalculator {
 public static void main(String[] args) {
 Scanner input = new Scanner(System.in);
 System.out.print("Enter the grade of the employee: ");
 char grade = input.next().charAt(0);
 System.out.print("Enter the employee salary: ");
 double salary = input.nextDouble();
 double bonus = 0;
 if (salary < 10000) {
 bonus = salary * 0.02;
 } else {
 if (grade == 'A') {
 bonus = salary * 0.05;
 } else if (grade == 'B') {
 bonus = salary * 0.10;
 }
 }
 double totalSalary = salary + bonus;
 System.out.println("Salary=" + salary);
 System.out.println("Bonus=" + bonus);
 System.out.println("Total to be paid:" + totalSalary);
 }
}
2.Write a program to print the first n perfect numbers. (Hint Perfect number means a positive integer
that is equal to the sum of its proper divisors)
Sample Input:
N = 3
Sample Output:
First 3 perfect numbers are: 6 , 28 , 496
Test Cases:
1. N = 0
2. N = 5
3. N = -2
4. N = -5
5. N = 0.2
public class PerfectNumbers {
 public static void main(String[] args) {
 int n = 3;
 int count = 0;
 int num = 1;
 System.out.print("First " + n + " perfect numbers are: ");
 while (count < n) {
 if (isPerfectNumber(num)) {
 System.out.print(num + " ");
 count++;
 }
 num++;
 }
 }
 public static boolean isPerfectNumber(int number) {
 int sum = 0;
 for (int i = 1; i < number; i++) {
 if (number % i == 0) {
 sum += i;
 }
 }
 return sum == number;
 }
}
8.Write a program to enter the marks of a student in four subjects. Then calculate the total and
aggregate, display the grade obtained by the student. If the student scores an aggregate greater than
75%, then the grade is Distinction. If aggregate is 60>= and <75, then the grade is First Division. If
aggregate is 50 >= and <60, then the grade is Second Division. If aggregate is 40>= and <50, then the
grade is Third Division. Else the grade is Fail.
Sample Input & Output:
Enter the marks in python: 90
Enter the marks in c programming: 91
Enter the marks in Mathematics: 92
Enter the marks in Physics: 93
Total= 366
Aggregate = 91.5
DISTINCTION
Test cases:
a) 18, 76,93,65
b) 73,78,79,75
c) 98,106,120,95
d) 96,73, -85,95
e) 78,59.8,76,79
import java.util.Scanner;
public class StudentGrades {
 public static void main(String[] args) {
 Scanner input = new Scanner(System.in);
 System.out.print("Enter the marks in Python: ");
 int python = input.nextInt();
 System.out.print("Enter the marks in C Programming: ");
 int cProgramming = input.nextInt();
 System.out.print("Enter the marks in Mathematics: ");
 int mathematics = input.nextInt();
 System.out.print("Enter the marks in Physics: ");
 int physics = input.nextInt();
 int total = python + cProgramming + mathematics + physics;
 double aggregate = total / 4.0;
 System.out.println("Total= " + total);
 System.out.println("Aggregate = " + aggregate);
 if (aggregate > 75) {
 System.out.println("DISTINCTION");
 } else if (aggregate >= 60 && aggregate < 75) {
 System.out.println("FIRST DIVISION");
 } else if (aggregate >= 50 && aggregate < 60) {
 System.out.println("SECOND DIVISION");
 } else if (aggregate >= 40 && aggregate < 50) {
 System.out.println("THIRD DIVISION");
 } else {
 System.out.println("FAIL");
 }
 }
}
9.Write a program to read the numbers until -1 is encountered. Find the average of positive numbers
and negative numbers entered by user.
Sample Input:
Enter -1 to exit…
Enter the number: 7
Enter the number: -2
Enter the number: 9
Enter the number: -8
Enter the number: -6
Enter the number: -4
Enter the number: 10
Enter the number: -1
Sample Output:
The average of negative numbers is: -5.0
The average of positive numbers is : 8.66666667
Test cases:
1. -1,43, -87, -29, 1, -9
2. 73, 7-6,2,10,28,-1
3. -5, -9, -46,2,5,0
4. 9, 11, -5, 6, 0,-1
5. -1,-1,-1,-1,-1
import java.util.Scanner;
public class AverageCalculator {
 public static void main(String[] args) {
 Scanner input = new Scanner(System.in);
 int number;
 int positiveSum = 0, positiveCount = 0;
 int negativeSum = 0, negativeCount = 0;
 System.out.println("Enter numbers. Enter -1 to exit.");
 do {
 System.out.print("Enter the number: ");
 number = input.nextInt();
 if (number > 0) {
 positiveSum += number;
 positiveCount++;
 } else if (number < 0) {
 negativeSum += number;
 negativeCount++;
 }
 } while (number != -1);
 if (positiveCount > 0) {
 double positiveAverage = (double) positiveSum / positiveCount;
 System.out.println("The average of positive numbers is: " + positiveAverage);
 } else {
 System.out.println("No positive numbers entered.");
 }
 if (negativeCount > 0) {
 double negativeAverage = (double) negativeSum / negativeCount;
 System.out.println("The average of negative numbers is: " + negativeAverage);
 } else {
 System.out.println("No negative numbers entered.");
 }
 input.close();
 }
}
1. Write a program to read a character until a * is encountered. Also count the number of
uppercase, lowercase, and numbers entered by the users.
Sample Input:
Enter * to exit…
Enter any character: W
Enter any character: d
Enter any character: A
Enter any character: G
Enter any character: g
Enter any character: H
Enter any character: *
Sample Output:
Total count of lower case:2
Total count of upper case:4
Total count of numbers =0
Test cases:
1. 1,7,6,9,5
2. S, Q, l, K,7, j, M
3. M, j, L, &, @, G
4. D, K, I, 6, L, *
5. *, K, A, e, 1, 8, %, *
import java.util.Scanner;
public class CharacterCounter {
 public static void main(String[] args) {
 Scanner scanner = new Scanner(System.in);
 int uppercaseCount = 0;
 int lowercaseCount = 0;
 int numberCount = 0;

 System.out.println("Enter * to exit...");

 char input;
 do {
 System.out.print("Enter any character: ");
 input = scanner.next().charAt(0);

 if (Character.isUpperCase(input)) {
 uppercaseCount++;
 } else if (Character.isLowerCase(input)) {
 lowercaseCount++;
 } else if (Character.isDigit(input)) {
 numberCount++;
 }
 } while (input != '*');

 System.out.println("Total count of lower case: " + lowercaseCount);
 System.out.println("Total count of upper case: " + uppercaseCount);
 System.out.println("Total count of numbers = " + numberCount);

 scanner.close();
 }
}
